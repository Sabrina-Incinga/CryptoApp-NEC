{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { currencies } from '../currencies';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../cryptocoin.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction CryptocoinListComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const currency_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", currency_r2.symbol);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", currency_r2.symbol, \" \");\n  }\n}\nfunction CryptocoinListComponent_section_13_article_1_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const coin_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Cantidad: \", ctx_r5.Object.keys(ctx_r5.currencyConvertData).includes(coin_r4.symbol) ? ctx_r5.currencyConvertData[coin_r4.symbol].price : (tmp_0_0 = ctx_r5.currencyChangeform.get(\"amount\")) == null ? null : tmp_0_0.value, \" \");\n  }\n}\nfunction CryptocoinListComponent_section_13_article_1_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const coin_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵtextInterpolate1(\" Cantidad: \", ((tmp_0_0 = ctx_r7.currencyChangeform.get(\"fromSymbol\")) == null ? null : tmp_0_0.value.toString()) === coin_r4.symbol.toString() ? (tmp_0_0 = ctx_r7.currencyChangeform.get(\"amount\")) == null ? null : tmp_0_0.value : 1, \" \");\n  }\n}\nfunction CryptocoinListComponent_section_13_article_1_section_10_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const property_r12 = ctx.$implicit;\n    const coin_r4 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Precio en \", property_r12, \": \", coin_r4.quote[property_r12].price * ((tmp_0_0 = ctx_r11.currencyChangeform.get(\"amount\")) == null ? null : tmp_0_0.value), \" \");\n  }\n}\nfunction CryptocoinListComponent_section_13_article_1_section_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\");\n    i0.ɵɵtemplate(1, CryptocoinListComponent_section_13_article_1_section_10_p_1_Template, 2, 2, \"p\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const coin_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.Object.keys(coin_r4.quote));\n  }\n}\nfunction CryptocoinListComponent_section_13_article_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"article\")(1, \"header\")(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"body\")(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, CryptocoinListComponent_section_13_article_1_p_7_Template, 2, 1, \"p\", 10);\n    i0.ɵɵtemplate(8, CryptocoinListComponent_section_13_article_1_ng_template_8_Template, 1, 1, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(10, CryptocoinListComponent_section_13_article_1_section_10_Template, 2, 1, \"section\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const coin_r4 = ctx.$implicit;\n    const _r6 = i0.ɵɵreference(9);\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", coin_r4.name, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" S\\u00EDmbolo: \", coin_r4.symbol, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.Object.keys(ctx_r3.currencyConvertData).length > 1)(\"ngIfElse\", _r6);\n  }\n}\nfunction CryptocoinListComponent_section_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\");\n    i0.ɵɵtemplate(1, CryptocoinListComponent_section_13_article_1_Template, 11, 4, \"article\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.cryptocoinList);\n  }\n}\nexport class CryptocoinListComponent {\n  constructor(cryptocoinService, formBuilder) {\n    this.cryptocoinService = cryptocoinService;\n    this.formBuilder = formBuilder;\n    this.cryptocoinList = [];\n    this.currencies = currencies;\n    this.currencyConvertData = {\n      \"\": {\n        price: 0\n      }\n    };\n    this.Object = Object;\n    this.currencyChangeform = this.formBuilder.group({\n      fromSymbol: ['BTC', Validators.required],\n      amount: [1, [Validators.required, Validators.min(0.01)]]\n    });\n  }\n  ngOnInit() {\n    this.getCryptocoins();\n  }\n  getCryptocoins() {\n    this.cryptocoinService.getCurrencies('BTC,ETH,BNB,USDT,ADA').subscribe(data => {\n      this.cryptocoinList = data;\n      setInterval(() => {\n        this.cryptocoinService.getCurrencies('BTC,ETH,BNB,USDT,ADA').subscribe(data => {\n          this.cryptocoinList = data;\n        }, error => console.log(error));\n      }, 5000);\n    }, error => console.log(error));\n  }\n  onSubmit() {\n    if (this.currencyChangeform.valid) {\n      const fromSymbol = this.currencyChangeform?.get('fromSymbol')?.value;\n      const amount = this.currencyChangeform?.get('amount')?.value;\n      const toSymbols = currencies.filter(curr => curr.symbol != fromSymbol).map(curr => curr.symbol).join(',');\n      this.cryptocoinService.getCurrenciesConvert(fromSymbol, toSymbols, amount).subscribe(result => {\n        this.currencyConvertData = result.data;\n      });\n    }\n  }\n}\nCryptocoinListComponent.ɵfac = function CryptocoinListComponent_Factory(t) {\n  return new (t || CryptocoinListComponent)(i0.ɵɵdirectiveInject(i1.CryptocoinService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nCryptocoinListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CryptocoinListComponent,\n  selectors: [[\"app-cryptocoin-list\"]],\n  decls: 14,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"fromSymbol\"], [\"name\", \"fromSymbol\", \"id\", \"fromSymbol\", \"formControlName\", \"fromSymbol\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"amount\"], [\"type\", \"text\", \"id\", \"amount\", \"formControlName\", \"amount\"], [\"type\", \"submit\"], [4, \"ngIf\"], [3, \"value\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"], [4, \"ngI\"]],\n  template: function CryptocoinListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Lista de Cryptomonedas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"section\")(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CryptocoinListComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"label\", 1);\n      i0.ɵɵtext(5, \"Seleccione tipo de moneda: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"select\", 2);\n      i0.ɵɵtemplate(7, CryptocoinListComponent_option_7_Template, 2, 2, \"option\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Cantidad a cambiar: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementStart(11, \"button\", 6);\n      i0.ɵɵtext(12, \"Cambiar\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(13, CryptocoinListComponent_section_13_Template, 2, 1, \"section\", 7);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.currencyChangeform);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.currencies);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.cryptocoinList);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,UAAU,QAAQ,eAAe;;;;;;;ICE9BC,iCAAsE;IAClEA,YACJ;IAAAA,iBAAS;;;;IAFDA,qDAAyB;IAC7BA,eACJ;IADIA,mDACJ;;;;;IAmBAA,yBAAuE;IACnEA,YACJ;IAAAA,iBAAI;;;;;;IADAA,eACJ;IADIA,0PACJ;;;;;IAEIA,YACJ;;;;;;IADIA,qQACJ;;;;;IAEIA,yBAAoD;IAChDA,YACJ;IAAAA,iBAAI;;;;;;;IADAA,eACJ;IADIA,wLACJ;;;;;IAHJA,+BAAc;IACVA,oGAEI;IACRA,iBAAU;;;;;IAHkBA,eAA0B;IAA1BA,2DAA0B;;;;;IAjB9DA,+BAA6C;IAGjCA,YACJ;IAAAA,iBAAK;IAETA,4BAAM;IAEEA,YACJ;IAAAA,iBAAI;IACJA,0FAEI;IACJA,+IAEc;IACdA,wGAIU;IACdA,iBAAO;;;;;;IAlBCA,eACJ;IADIA,6CACJ;IAIIA,eACJ;IADIA,6DACJ;IACIA,eAAmD;IAAnDA,gFAAmD;;;;;IAXnEA,+BAAgC;IAC5BA,4FAsBU;IACdA,iBAAU;;;;IAvBoBA,eAAiB;IAAjBA,+CAAiB;;;ADN/C,OAAM,MAAOC,uBAAuB;EAQlCC,YAAmBC,iBAAoC,EAAUC,WAAwB;IAAtE,sBAAiB,GAAjBD,iBAAiB;IAA6B,gBAAW,GAAXC,WAAW;IAP5E,mBAAc,GAAkB,EAAE;IAClC,eAAU,GAAGL,UAAU;IAEvB,wBAAmB,GAAU;MAAC,EAAE,EAAE;QAChCM,KAAK,EAAE;;IACR,CAAC;IAcF,WAAM,GAAGC,MAAM;IAXb,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MAC/CC,UAAU,EAAE,CAAC,KAAK,EAAEX,UAAU,CAACY,QAAQ,CAAC;MACxCC,MAAM,EAAE,CAAC,CAAC,EAAE,CAACb,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACc,GAAG,CAAC,IAAI,CAAC,CAAC;KACxD,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;EAEvB;EAIQA,cAAc;IACpB,IAAI,CAACX,iBAAiB,CAACY,aAAa,CAAC,sBAAsB,CAAC,CAACC,SAAS,CACnEC,IAAI,IAAI;MACP,IAAI,CAACC,cAAc,GAAGD,IAAI;MAC1BE,WAAW,CAAC,MAAK;QACf,IAAI,CAAChB,iBAAiB,CAACY,aAAa,CAAC,sBAAsB,CAAC,CAACC,SAAS,CACnEC,IAAI,IAAI;UACP,IAAI,CAACC,cAAc,GAAGD,IAAI;QAC5B,CAAC,EACAG,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC9B;MACH,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,EACAA,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC9B;EACH;EAEAG,QAAQ;IACN,IAAI,IAAI,CAAChB,kBAAkB,CAACiB,KAAK,EAAE;MACjC,MAAMf,UAAU,GAAG,IAAI,CAACF,kBAAkB,EAAEkB,GAAG,CAAC,YAAY,CAAC,EAAEC,KAAK;MACpE,MAAMf,MAAM,GAAG,IAAI,CAACJ,kBAAkB,EAAEkB,GAAG,CAAC,QAAQ,CAAC,EAAEC,KAAK;MAC5D,MAAMC,SAAS,GAAG5B,UAAU,CAAC6B,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,IAAIrB,UAAU,CAAC,CAACsB,GAAG,CAACF,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC;MAEzG,IAAI,CAAC7B,iBAAiB,CAAC8B,oBAAoB,CAACxB,UAAU,EAAEkB,SAAS,EAAEhB,MAAM,CAAC,CAACK,SAAS,CAACkB,MAAM,IAAG;QAC5F,IAAI,CAACC,mBAAmB,GAAGD,MAAM,CAACjB,IAAI;MAExC,CAAC,CAAC;;EAEN;;AAlDWhB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAmC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVpCxC,0BAAI;MAAAA,sCAAsB;MAAAA,iBAAK;MAC/BA,+BAAS;MACkCA;QAAA,OAAYyC,cAAU;MAAA,EAAC;MAC1DzC,gCAAwB;MAAAA,2CAA2B;MAAAA,iBAAQ;MAC3DA,iCAAuE;MACnEA,8EAES;MACbA,iBAAS;MACTA,gCAAoB;MAAAA,oCAAoB;MAAAA,iBAAQ;MAChDA,4BAAwD;MACxDA,kCAAsB;MAAAA,wBAAO;MAAAA,iBAAS;MAI9CA,kFAwBU;;;MArCAA,eAAgC;MAAhCA,kDAAgC;MAGyBA,eAAa;MAAbA,wCAAa;MAUtEA,eAAoB;MAApBA,yCAAoB","names":["Validators","currencies","i0","CryptocoinListComponent","constructor","cryptocoinService","formBuilder","price","Object","currencyChangeform","group","fromSymbol","required","amount","min","ngOnInit","getCryptocoins","getCurrencies","subscribe","data","cryptocoinList","setInterval","error","console","log","onSubmit","valid","get","value","toSymbols","filter","curr","symbol","map","join","getCurrenciesConvert","result","currencyConvertData","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["H:\\Sabrina\\NEC\\CryptoWebAppClient\\crypto-web-app-client\\src\\app\\cryptocoin-list\\cryptocoin-list.component.ts","H:\\Sabrina\\NEC\\CryptoWebAppClient\\crypto-web-app-client\\src\\app\\cryptocoin-list\\cryptocoin-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CryptocoinService, cryptocoin, quote } from '../cryptocoin.service';\nimport { currencies } from '../currencies';\n\n@Component({\n  selector: 'app-cryptocoin-list',\n  templateUrl: './cryptocoin-list.component.html',\n  styleUrls: ['./cryptocoin-list.component.css']\n})\nexport class CryptocoinListComponent implements OnInit{\n  cryptocoinList : cryptocoin[] = [];\n  currencies = currencies;\n  currencyChangeform: FormGroup;\n  currencyConvertData: quote = {\"\": {\n    price: 0,\n  }};\n\n  constructor(public cryptocoinService: CryptocoinService, private formBuilder: FormBuilder){\n    this.currencyChangeform = this.formBuilder.group({\n      fromSymbol: ['BTC', Validators.required],\n      amount: [1, [Validators.required, Validators.min(0.01)]]\n    });\n  };\n\n  ngOnInit(): void {\n    this.getCryptocoins();\n    \n  }\n\n  Object = Object;\n\n  private getCryptocoins() {\n    this.cryptocoinService.getCurrencies('BTC,ETH,BNB,USDT,ADA').subscribe(\n      (data) => {\n        this.cryptocoinList = data;\n        setInterval(() => {\n          this.cryptocoinService.getCurrencies('BTC,ETH,BNB,USDT,ADA').subscribe(\n            (data) => {\n              this.cryptocoinList = data;\n            },\n            (error) => console.log(error)\n          );\n        }, 5000);\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  onSubmit() {\n    if (this.currencyChangeform.valid) {\n      const fromSymbol = this.currencyChangeform?.get('fromSymbol')?.value;\n      const amount = this.currencyChangeform?.get('amount')?.value;\n      const toSymbols = currencies.filter(curr => curr.symbol != fromSymbol).map(curr => curr.symbol).join(',');\n      \n      this.cryptocoinService.getCurrenciesConvert(fromSymbol, toSymbols, amount).subscribe(result => {\n        this.currencyConvertData = result.data;\n        \n      });\n    }\n  }\n}\n","<h2>Lista de Cryptomonedas</h2>\n<section>\n    <form [formGroup]=\"currencyChangeform\" (ngSubmit)=\"onSubmit()\">\n        <label for=\"fromSymbol\">Seleccione tipo de moneda: </label>\n        <select name=\"fromSymbol\" id=\"fromSymbol\" formControlName=\"fromSymbol\">\n            <option value={{currency.symbol}} *ngFor=\"let currency of currencies\">\n                {{currency.symbol}}\n            </option>\n        </select>\n        <label for=\"amount\">Cantidad a cambiar: </label>\n        <input type=\"text\" id=\"amount\" formControlName=\"amount\">\n        <button type=\"submit\">Cambiar</button>\n    </form>\n</section>\n\n<section *ngIf=\"cryptocoinList\">\n    <article *ngFor=\"let coin of cryptocoinList\">\n        <header>\n            <h3>\n                {{ coin.name }}\n            </h3>\n        </header>\n        <body>\n            <p>\n                Símbolo: {{ coin.symbol }}\n            </p>\n            <p *ngIf=\"Object.keys(currencyConvertData).length > 1; else elseBlock\">\n                Cantidad: {{Object.keys(currencyConvertData).includes(coin.symbol) ? currencyConvertData[coin.symbol].price : currencyChangeform.get('amount')?.value}}\n            </p>\n            <ng-template #elseBlock>\n                Cantidad: {{currencyChangeform.get('fromSymbol')?.value.toString() === coin.symbol.toString() ? currencyChangeform.get('amount')?.value : 1}}\n            </ng-template>\n            <section *ngI>\n                <p *ngFor=\"let property of Object.keys(coin.quote)\">\n                    Precio en {{property}}: {{ coin.quote[property].price * currencyChangeform.get('amount')?.value }}\n                </p>\n            </section>\n        </body>\n    </article>\n</section>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}