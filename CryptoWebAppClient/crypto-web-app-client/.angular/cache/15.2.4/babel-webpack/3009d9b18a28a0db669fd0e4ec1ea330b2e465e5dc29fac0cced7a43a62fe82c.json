{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CryptocoinService {\n  constructor(http) {\n    this.http = http;\n  }\n  getCurrencies(symbols) {\n    return this.http.get(`http://localhost:57641/api/crypto?coinSymbols=${symbols}`);\n  }\n  getCurrenciesConvert(fromSymbol, toSymbols, amount) {\n    return this.http.get(`http://localhost:57641/api/crypto/convert?fromSymbol=${fromSymbol}&toSymbol=${toSymbols}&amount=${amount}`);\n  }\n}\nCryptocoinService.ɵfac = function CryptocoinService_Factory(t) {\n  return new (t || CryptocoinService)(i0.ɵɵinject(i1.HttpClient));\n};\nCryptocoinService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CryptocoinService,\n  factory: CryptocoinService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAgCA,OAAM,MAAOA,iBAAiB;EAE5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,aAAa,CAACC,OAAc;IAC1B,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAe,iDAAiDD,OAAO,EAAE,CAAC;EAChG;EAEAE,oBAAoB,CAACC,UAAiB,EAAEC,SAAgB,EAAEC,MAAa;IACrE,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAkB,wDAAwDE,UAAU,aAAaC,SAAS,WAAWC,MAAM,EAAE,CAAC;EACpJ;;AAVWT,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAU,SAAjBV,iBAAiB;EAAAW,YAFhB;AAAM","names":["CryptocoinService","constructor","http","getCurrencies","symbols","get","getCurrenciesConvert","fromSymbol","toSymbols","amount","factory","providedIn"],"sourceRoot":"","sources":["H:\\Sabrina\\NEC\\CryptoWebAppClient\\crypto-web-app-client\\src\\app\\cryptocoin.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\nexport interface convertResponse{\n  status: {\n    timestamp: string;\n    errorCode: number;\n    errorMessage: string | null;\n  };\n  data: {\n    [key: string]: {\n      price: number;\n    };\n  };\n}\n\nexport interface cryptocoin{\n  name: string;\n  symbol: string,\n  quote: {\n    [key: string]: {\n      price: number;\n    };\n  }\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CryptocoinService {\n\n  constructor(private http: HttpClient) { }\n\n  getCurrencies(symbols:string): Observable<cryptocoin[]>{\n    return this.http.get<cryptocoin[]>(`http://localhost:57641/api/crypto?coinSymbols=${symbols}`);\n  }\n\n  getCurrenciesConvert(fromSymbol:string, toSymbols:string, amount:Number): Observable<convertResponse>{\n    return this.http.get<convertResponse>(`http://localhost:57641/api/crypto/convert?fromSymbol=${fromSymbol}&toSymbol=${toSymbols}&amount=${amount}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}